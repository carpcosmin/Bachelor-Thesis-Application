// Generated by view binder compiler. Do not edit!
package com.example.aplicatielicenta.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.GridLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aplicatielicenta.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddOfferBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAddImage;

  @NonNull
  public final MaterialButton btnRent;

  @NonNull
  public final Button btnSaveOffer;

  @NonNull
  public final MaterialButton btnSell;

  @NonNull
  public final CheckBox checkBoxAC;

  @NonNull
  public final CheckBox checkBoxBalcony;

  @NonNull
  public final CheckBox checkBoxHeating;

  @NonNull
  public final CheckBox checkBoxParking;

  @NonNull
  public final CheckBox checkBoxPets;

  @NonNull
  public final CheckBox checkBoxSmokers;

  @NonNull
  public final EditText editTextAddress;

  @NonNull
  public final EditText editTextDescription;

  @NonNull
  public final EditText editTextFloor;

  @NonNull
  public final EditText editTextPrice;

  @NonNull
  public final EditText editTextRooms;

  @NonNull
  public final EditText editTextSurface;

  @NonNull
  public final EditText editTextTitle;

  @NonNull
  public final GridLayout imageGrid;

  @NonNull
  public final Spinner spinnerType;

  @NonNull
  public final MaterialButtonToggleGroup toggleGroupOfferType;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvDeleteImage;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvFacilites;

  @NonNull
  public final TextView tvFloor;

  @NonNull
  public final TextView tvNoOfPhotos;

  @NonNull
  public final TextView tvNoOfRooms;

  @NonNull
  public final TextView tvOfferAddress;

  @NonNull
  public final TextView tvOfferTitle;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final TextView tvPropertyType;

  @NonNull
  public final TextView tvSurface;

  private ActivityAddOfferBinding(@NonNull ScrollView rootView, @NonNull Button btnAddImage,
      @NonNull MaterialButton btnRent, @NonNull Button btnSaveOffer,
      @NonNull MaterialButton btnSell, @NonNull CheckBox checkBoxAC,
      @NonNull CheckBox checkBoxBalcony, @NonNull CheckBox checkBoxHeating,
      @NonNull CheckBox checkBoxParking, @NonNull CheckBox checkBoxPets,
      @NonNull CheckBox checkBoxSmokers, @NonNull EditText editTextAddress,
      @NonNull EditText editTextDescription, @NonNull EditText editTextFloor,
      @NonNull EditText editTextPrice, @NonNull EditText editTextRooms,
      @NonNull EditText editTextSurface, @NonNull EditText editTextTitle,
      @NonNull GridLayout imageGrid, @NonNull Spinner spinnerType,
      @NonNull MaterialButtonToggleGroup toggleGroupOfferType, @NonNull Toolbar toolbar,
      @NonNull TextView tvDeleteImage, @NonNull TextView tvDescription,
      @NonNull TextView tvFacilites, @NonNull TextView tvFloor, @NonNull TextView tvNoOfPhotos,
      @NonNull TextView tvNoOfRooms, @NonNull TextView tvOfferAddress,
      @NonNull TextView tvOfferTitle, @NonNull TextView tvPrice, @NonNull TextView tvPropertyType,
      @NonNull TextView tvSurface) {
    this.rootView = rootView;
    this.btnAddImage = btnAddImage;
    this.btnRent = btnRent;
    this.btnSaveOffer = btnSaveOffer;
    this.btnSell = btnSell;
    this.checkBoxAC = checkBoxAC;
    this.checkBoxBalcony = checkBoxBalcony;
    this.checkBoxHeating = checkBoxHeating;
    this.checkBoxParking = checkBoxParking;
    this.checkBoxPets = checkBoxPets;
    this.checkBoxSmokers = checkBoxSmokers;
    this.editTextAddress = editTextAddress;
    this.editTextDescription = editTextDescription;
    this.editTextFloor = editTextFloor;
    this.editTextPrice = editTextPrice;
    this.editTextRooms = editTextRooms;
    this.editTextSurface = editTextSurface;
    this.editTextTitle = editTextTitle;
    this.imageGrid = imageGrid;
    this.spinnerType = spinnerType;
    this.toggleGroupOfferType = toggleGroupOfferType;
    this.toolbar = toolbar;
    this.tvDeleteImage = tvDeleteImage;
    this.tvDescription = tvDescription;
    this.tvFacilites = tvFacilites;
    this.tvFloor = tvFloor;
    this.tvNoOfPhotos = tvNoOfPhotos;
    this.tvNoOfRooms = tvNoOfRooms;
    this.tvOfferAddress = tvOfferAddress;
    this.tvOfferTitle = tvOfferTitle;
    this.tvPrice = tvPrice;
    this.tvPropertyType = tvPropertyType;
    this.tvSurface = tvSurface;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddOfferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddOfferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_offer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddOfferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddImage;
      Button btnAddImage = ViewBindings.findChildViewById(rootView, id);
      if (btnAddImage == null) {
        break missingId;
      }

      id = R.id.btnRent;
      MaterialButton btnRent = ViewBindings.findChildViewById(rootView, id);
      if (btnRent == null) {
        break missingId;
      }

      id = R.id.btnSaveOffer;
      Button btnSaveOffer = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveOffer == null) {
        break missingId;
      }

      id = R.id.btnSell;
      MaterialButton btnSell = ViewBindings.findChildViewById(rootView, id);
      if (btnSell == null) {
        break missingId;
      }

      id = R.id.checkBoxAC;
      CheckBox checkBoxAC = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxAC == null) {
        break missingId;
      }

      id = R.id.checkBoxBalcony;
      CheckBox checkBoxBalcony = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxBalcony == null) {
        break missingId;
      }

      id = R.id.checkBoxHeating;
      CheckBox checkBoxHeating = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxHeating == null) {
        break missingId;
      }

      id = R.id.checkBoxParking;
      CheckBox checkBoxParking = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxParking == null) {
        break missingId;
      }

      id = R.id.checkBoxPets;
      CheckBox checkBoxPets = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPets == null) {
        break missingId;
      }

      id = R.id.checkBoxSmokers;
      CheckBox checkBoxSmokers = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSmokers == null) {
        break missingId;
      }

      id = R.id.editTextAddress;
      EditText editTextAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextAddress == null) {
        break missingId;
      }

      id = R.id.editTextDescription;
      EditText editTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.editTextFloor;
      EditText editTextFloor = ViewBindings.findChildViewById(rootView, id);
      if (editTextFloor == null) {
        break missingId;
      }

      id = R.id.editTextPrice;
      EditText editTextPrice = ViewBindings.findChildViewById(rootView, id);
      if (editTextPrice == null) {
        break missingId;
      }

      id = R.id.editTextRooms;
      EditText editTextRooms = ViewBindings.findChildViewById(rootView, id);
      if (editTextRooms == null) {
        break missingId;
      }

      id = R.id.editTextSurface;
      EditText editTextSurface = ViewBindings.findChildViewById(rootView, id);
      if (editTextSurface == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      EditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.image_grid;
      GridLayout imageGrid = ViewBindings.findChildViewById(rootView, id);
      if (imageGrid == null) {
        break missingId;
      }

      id = R.id.spinnerType;
      Spinner spinnerType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerType == null) {
        break missingId;
      }

      id = R.id.toggleGroupOfferType;
      MaterialButtonToggleGroup toggleGroupOfferType = ViewBindings.findChildViewById(rootView, id);
      if (toggleGroupOfferType == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvDeleteImage;
      TextView tvDeleteImage = ViewBindings.findChildViewById(rootView, id);
      if (tvDeleteImage == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvFacilites;
      TextView tvFacilites = ViewBindings.findChildViewById(rootView, id);
      if (tvFacilites == null) {
        break missingId;
      }

      id = R.id.tvFloor;
      TextView tvFloor = ViewBindings.findChildViewById(rootView, id);
      if (tvFloor == null) {
        break missingId;
      }

      id = R.id.tvNoOfPhotos;
      TextView tvNoOfPhotos = ViewBindings.findChildViewById(rootView, id);
      if (tvNoOfPhotos == null) {
        break missingId;
      }

      id = R.id.tvNoOfRooms;
      TextView tvNoOfRooms = ViewBindings.findChildViewById(rootView, id);
      if (tvNoOfRooms == null) {
        break missingId;
      }

      id = R.id.tvOfferAddress;
      TextView tvOfferAddress = ViewBindings.findChildViewById(rootView, id);
      if (tvOfferAddress == null) {
        break missingId;
      }

      id = R.id.tvOfferTitle;
      TextView tvOfferTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvOfferTitle == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.tvPropertyType;
      TextView tvPropertyType = ViewBindings.findChildViewById(rootView, id);
      if (tvPropertyType == null) {
        break missingId;
      }

      id = R.id.tvSurface;
      TextView tvSurface = ViewBindings.findChildViewById(rootView, id);
      if (tvSurface == null) {
        break missingId;
      }

      return new ActivityAddOfferBinding((ScrollView) rootView, btnAddImage, btnRent, btnSaveOffer,
          btnSell, checkBoxAC, checkBoxBalcony, checkBoxHeating, checkBoxParking, checkBoxPets,
          checkBoxSmokers, editTextAddress, editTextDescription, editTextFloor, editTextPrice,
          editTextRooms, editTextSurface, editTextTitle, imageGrid, spinnerType,
          toggleGroupOfferType, toolbar, tvDeleteImage, tvDescription, tvFacilites, tvFloor,
          tvNoOfPhotos, tvNoOfRooms, tvOfferAddress, tvOfferTitle, tvPrice, tvPropertyType,
          tvSurface);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
